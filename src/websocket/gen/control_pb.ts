// 車両制御命令

// @generated by protoc-gen-es v1.7.0 with parameter "target=ts"
// @generated from file control.proto (package hoge.control, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message hoge.control.HogeControl
 */
export class HogeControl extends Message<HogeControl> {
  /**
   * タイムスタンプ(エポック秒)
   *
   * @generated from field: int64 timestamp = 1;
   */
  timestamp = protoInt64.zero;

  constructor(data?: PartialMessage<HogeControl>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "hoge.control.HogeControl";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HogeControl {
    return new HogeControl().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HogeControl {
    return new HogeControl().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HogeControl {
    return new HogeControl().fromJsonString(jsonString, options);
  }

  static equals(a: HogeControl | PlainMessage<HogeControl> | undefined, b: HogeControl | PlainMessage<HogeControl> | undefined): boolean {
    return proto3.util.equals(HogeControl, a, b);
  }
}

